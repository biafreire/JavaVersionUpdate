package br.bia.diff.j8.support;

import java.lang.annotation.Repeatable;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;

/**
 * In Java 8 release, Java allows you to repeating annotations in 
 * your source code. It is helpful when you want to reuse annotation 
 * for the same class. You can repeat an annotation anywhere that 
 * you would use a standard annotation.
 * For compatibility reasons, repeating annotations are stored in a 
 * container annotation that is automatically generated by the Java compiler. 
 * In order for the compiler to do this, two declarations are required in your code.
 *     1. Declare a repeatable annotation type
 *     2. Declare the containing annotation type
 *         
 * Based in:
 * https://www.javabrahman.com/java-8/java-8-repeating-annotations-tutorial/
 * 
 * @author Fabiana Araujo
 *
 */

//1) Declare a repeatable annotation type
@Repeatable(Colors.class)
@interface Color {
  String name();
}
//2) Declare the containing annotation type
@Retention(RetentionPolicy.RUNTIME)
@interface Colors {
  Color[] value();
}

@Color(name = "red") @Color(name = "blue") @Color(name = "green")
public class Shirt {

	//Accessing annotations via reflection
	public void execute(){
		Color[] colorArray = Shirt.class.getAnnotationsByType(Color.class);
		for (Color color : colorArray) {
		    System.out.println(color.name());
		  }
	}
}
